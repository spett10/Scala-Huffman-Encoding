\relax 
\@writefile{toc}{\contentsline {section}{\numberline {1}Specification}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Design}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}def weight(tree: HuffTree): Int}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}def combine(left: HuffTree, right: HuffTree): HuffTree}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}def frequencies(chars: List[Char]): List[(Char, Int)]}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.4}def combineTrees(trees: SortedSet[HuffTree]): HuffTree}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5}def createCodeTree(chars: List[Char]): HuffTree}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.6}def convert(tree: HuffTree): CodeTable}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.7}def codeBits(table: CodeTable)(char: Char): List[Bit]}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.8}encode(tree: HuffTree)(text: List[Char]): List[Bit]}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.9}getLetter(tree: HuffTree, bits: List[Bit]): (Char, List[Bit])}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.10}def decode(tree: HuffTree)(bits: List[Bit]): List[Char]}{3}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Implementation}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}def weight(tree: HuffTree): Int}{4}}
\@writefile{lol}{\contentsline {lstlisting}{ex1.scala}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}def combine(left: HuffTree, right: HuffTree): HuffTree}{4}}
\@writefile{lol}{\contentsline {lstlisting}{ex2.scala}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}def frequencies(chars: List[Char]): List[(Char, Int)]}{4}}
\@writefile{lol}{\contentsline {lstlisting}{ex3.scala}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}def combineTrees(trees: SortedSet[HuffTree])}{4}}
\@writefile{lol}{\contentsline {lstlisting}{ex4.scala}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.5}def createCodeTree(chars: List[Char]): HuffTree}{5}}
\@writefile{lol}{\contentsline {lstlisting}{ex5.scala}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.6}def convert(tree: HuffTree, acc: List[Bit] = Nil): CodeTable }{5}}
\@writefile{lol}{\contentsline {lstlisting}{ex6.scala}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.7}def codeBits(table: CodeTable)(char: Char): List[Bit]}{6}}
\@writefile{lol}{\contentsline {lstlisting}{ex7.scala}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.8}encode(tree: HuffTree)(text: List[Char]): List[Bit]}{6}}
\@writefile{lol}{\contentsline {lstlisting}{ex8.scala}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.9}getLetter(tree: HuffTree, bits: List[Bit]): (Char, List[Bit])}{6}}
\@writefile{lol}{\contentsline {lstlisting}{ex9.scala}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.10}def decode(tree: HuffTree)(bits: List[Bit]): List[Char]}{7}}
\@writefile{lol}{\contentsline {lstlisting}{ex10.scala}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Testing}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}def weight(tree: HuffTree): Int}{7}}
\@writefile{lol}{\contentsline {lstlisting}{test1.scala}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}def combine(left: HuffTree, right: HuffTree): HuffTree}{8}}
\@writefile{lol}{\contentsline {lstlisting}{test2.scala}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}def frequencies(chars: List[Char]): List[(Char, Int)]}{8}}
\@writefile{lol}{\contentsline {lstlisting}{tesst3.scala}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}def combineTrees(trees: SortedSet[HuffTree])}{8}}
\@writefile{lol}{\contentsline {lstlisting}{test4.scala}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}def createCodeTree(chars: List[Char]): HuffTree}{9}}
\@writefile{lol}{\contentsline {lstlisting}{test5.scala}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}def convert(tree: HuffTree): CodeTable}{10}}
\@writefile{lol}{\contentsline {lstlisting}{test6.scala}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}def codeBits(table: CodeTable)(char: Char): List[Bit]}{10}}
\@writefile{lol}{\contentsline {lstlisting}{test7.scala}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.8}encode(table:CodeTable)(text: List[Char]): List[Bit]}{11}}
\@writefile{lol}{\contentsline {lstlisting}{test8.scala}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.9}getLetter(tree: HuffTree, bits: List[Bit]): (Char, List[Bit])}{11}}
\@writefile{lol}{\contentsline {lstlisting}{test9.scala}{11}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.10}def decode(tree: HuffTree)(bits: List[Bit]): List[Char]}{12}}
\@writefile{lol}{\contentsline {lstlisting}{test10.scala}{12}}
\@writefile{lol}{\contentsline {lstlisting}{test11.scala}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.11}Test for clarity}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.12}Test on alphabet}{14}}
\@writefile{toc}{\contentsline {section}{\numberline {5}Conclusion}{15}}
\@writefile{toc}{\contentsline {section}{\numberline {6}Appendix- Huffman.scala}{15}}
\@writefile{lol}{\contentsline {lstlisting}{Huffman.scala}{15}}
